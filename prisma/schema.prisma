generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  name          String
  nim           String
  class         String
  noHp          String
  gender        String
  email         String
  password      String
  major         String
  faculty       String
  document      String
  github        String
  year          Int
  answers       Answer[]
  certification Certification[]
  modul         Modul[]
  questions     Questions[]
  submission    Submission[]
  topics        Topic[]
}

model Admin {
  id            Int             @id @default(autoincrement())
  username      String
  password      String
  name          String
  certification Certification[]
  modul         Modul[]
  submission    Submission[]
}

model Modul {
  id       Int     @id @default(autoincrement())
  name     String
  link     String
  user_id  Int
  admin_id Int
  status   Boolean
  admin    Admin   @relation(fields: [admin_id], references: [id])
  user     User    @relation(fields: [user_id], references: [id])
}

model Submission {
  id       Int      @id @default(autoincrement())
  openedAt DateTime
  closedAt DateTime
  file     String
  user_id  Int
  admin_id Int
  admin    Admin    @relation(fields: [admin_id], references: [id])
  user     User     @relation(fields: [user_id], references: [id])
}

model Certification {
  id       Int    @id @default(autoincrement())
  image    String
  name     String
  user_id  Int
  admin_id Int
  admin    Admin  @relation(fields: [admin_id], references: [id])
  user     User   @relation(fields: [user_id], references: [id])
}

model Topic {
  id        String      @id @default(uuid())
  title     String
  userId    Int
  questions Questions[]
  User      User        @relation(fields: [userId], references: [id])
}

model Questions {
  id        String   @id @default(uuid())
  messages  String
  image     String?
  createdAt DateTime @default(now())
  userId    Int
  topicId   String
  answers   Answer[]
  Topic     Topic    @relation(fields: [topicId], references: [id])
  User      User     @relation(fields: [userId], references: [id])
}

model Answer {
  id         String    @id @default(uuid())
  messages   String
  image      String?
  createdAt  DateTime  @default(now())
  userId     Int
  questionId String
  Questions  Questions @relation(fields: [questionId], references: [id])
  User       User      @relation(fields: [userId], references: [id])
}
